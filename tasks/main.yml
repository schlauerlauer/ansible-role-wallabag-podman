---
# tasks file for ansible-role-wallabag-podman

- name: "Include secrets"
  ansible.builtin.include_vars:
    file: "{{ playbook_dir }}/inventory/hoth_secrets.yml"
    name: "bws"

- name: "Set fact"
  ansible.builtin.set_fact:
    secrets: '{{ lookup("community.general.bitwarden_secrets_manager", bws.bws_wallabag_id, bws_access_token=bws.bws_token).value | from_json }}'

- name: "Create directories"
  file:
    path: "{{ item }}"
    state: "directory"
  loop:
    - "{{ secrets.base_dir }}/wallabag"
    - "{{ secrets.base_dir }}/wallabag/pg_data"
    - "{{ secrets.base_dir }}/wallabag/images"

- name: "Create wallabag pod"
  containers.podman.podman_pod:
    name: "wallabag-pod"
    state: "created"
    infra_name: "wallabag-infra"
    recreate: no
    ports:
      - "{{ secrets.wallabag_port }}:80" # web

- name: "Run wallabag postgres"
  containers.podman.podman_container:
    pod: "wallabag-pod"
    name: "wallabag-postgres"
    image: "docker.io/library/postgres:16.0-alpine3.18"
    recreate: no
    restart_policy: "no"
    tty: no
    detach: yes
    state: "started"
    env:
      POSTGRES_USER: "wallabag"
      POSTGRES_DB: "wallabag"
      DB_PASSWORD: "{{ secrets.postgres_password }}"
      POSTGRES_PASSWORD: "{{ secrets.postgres_password }}"
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - "{{ secrets.base_dir}}/wallabag/pg_data:/var/lib/postgresql/data:rw,Z"

- name: "Run wallabag redis"
  containers.podman.podman_container:
    pod: "wallabag-pod"
    name: "wallabag-redis"
    image: "docker.io/library/redis:7.2.1-alpine3.18"
    recreate: no
    restart_policy: "no"
    tty: no
    detach: yes
    state: "started"

- name: "Run wallabag server"
  containers.podman.podman_container:
    pod: "wallabag-pod"
    name: "wallabag-server"
    image: "docker.io/wallabag/wallabag:{{ secrets.wallabag_version }}"
    recreate: yes
    restart_policy: "no"
    rm: no
    tty: no
    detach: yes
    state: "started"
    env:
      POSTGRES_PASSWORD: "{{ secrets.postgres_password }}"
      POSTGRES_USER: "wallabag"
      SYMFONY__ENV__DATABASE_DRIVER: "pdo_pgsql"
      SYMFONY__ENV__DATABASE_HOST: "127.0.0.1"
      SYMFONY__ENV__DATABASE_PORT: "5432"
      SYMFONY__ENV__DATABASE_NAME: "wallabag"
      SYMFONY__ENV__DATABASE_USER: "wallabag"
      SYMFONY__ENV__DATABASE_PASSWORD: "{{ secrets.postgres_password }}"
      SYMFONY__ENV__MAILER_DSN: "smtp://127.0.0.1"
      SYMFONY__ENV__FROM_EMAIL: "{{ secrets.wallabag_email }}"
      SYMFONY__ENV__DOMAIN_NAME: "https://{{ secrets.wallabag_domain }}"
      SYMFONY__ENV__SERVER_NAME: "Your wallabag instance"
      SYMFONY__ENV__REDIS_HOST: "127.0.0.1"
      SYMFONY__ENV__REDIS_PASSWORD: ""
      SYMFONY__ENV__FOSUSER_REGISTRATION: "{{ secrets.wallabag_register }}"
      SYMFONY__ENV__FOSUSER_CONFIRMATION: "false"
      SYMFONY__ENV__SECRET: "{{ secrets.env_secret }}"
    volumes:
      - "{{ secrets.base_dir }}/wallabag/images:/var/www/wallabag/web/assets/images:z"

# TODO podman exec -it wallabag-server /var/www/wallabag/bin/console doctrine:migrations:migrate --env=prod --no-interaction
